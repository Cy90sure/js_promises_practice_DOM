{"mappings":"ACEA,SAAS,EAAe,CAAI,EAC1B,IAAM,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,YAAY,CAAC,UAAW,gBAChC,EAAQ,SAAS,CAAG,UACpB,EAAQ,WAAW,CAAG,EACtB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,CAEA,SAAS,EAAa,CAAI,EACxB,IAAM,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,YAAY,CAAC,UAAW,gBAChC,EAAQ,SAAS,CAAG,QACpB,EAAQ,WAAW,CAAG,EACtB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,CAYA,AAViB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,6BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAES,IAAI,CAAC,GAAgB,KAAK,CAAC,SAAC,CAArC,EACE,EAAa,EAAM,OAAO,CAC5B,GAaA,AAXiB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,GAChB,EAAQ,8BACV,EACF,GAES,IAAI,CAAC,GAAgB,KAAK,CAAC,GAwBpC,AAtBiB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,IAAI,EAAc,CAAA,EACd,EAAe,CAAA,EAEnB,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAc,CAAA,EAEV,AAAe,GACjB,EAAQ,6BAEZ,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,GAChB,EAAe,CAAA,EAEX,GAAe,GACjB,EAAQ,6BAEZ,EACF,GAES,IAAI,CAAC,GAAgB,KAAK,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction successHandler(text) {\n    var message = document.createElement(\"div\");\n    message.setAttribute(\"data-qa\", \"notification\");\n    message.className = \"success\";\n    message.textContent = text;\n    document.body.append(message);\n}\nfunction errorHandler(text) {\n    var message = document.createElement(\"div\");\n    message.setAttribute(\"data-qa\", \"notification\");\n    message.className = \"error\";\n    message.textContent = text;\n    document.body.append(message);\n}\nvar promise1 = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\npromise1.then(successHandler).catch(function(error) {\n    errorHandler(error.message);\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function(e) {\n        e.preventDefault();\n        resolve(\"Second promise was resolved\");\n    });\n});\npromise2.then(successHandler).catch(errorHandler);\nvar promise3 = new Promise(function(resolve, reject) {\n    var leftClicked = false;\n    var rightClicked = false;\n    document.addEventListener(\"click\", function() {\n        leftClicked = true;\n        if (leftClicked && rightClicked) resolve(\"Third promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function(e) {\n        e.preventDefault();\n        rightClicked = true;\n        if (leftClicked && rightClicked) resolve(\"Third promise was resolved\");\n    });\n});\npromise3.then(successHandler).catch(errorHandler);\n\n//# sourceMappingURL=index.5138efe1.js.map\n","'use strict';\n\nfunction successHandler(text) {\n  const message = document.createElement('div');\n\n  message.setAttribute('data-qa', 'notification');\n  message.className = 'success';\n  message.textContent = text;\n  document.body.append(message);\n}\n\nfunction errorHandler(text) {\n  const message = document.createElement('div');\n\n  message.setAttribute('data-qa', 'notification');\n  message.className = 'error';\n  message.textContent = text;\n  document.body.append(message);\n}\n\nconst promise1 = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\npromise1.then(successHandler).catch((error) => {\n  errorHandler(error.message);\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    resolve('Second promise was resolved');\n  });\n});\n\npromise2.then(successHandler).catch(errorHandler);\n\nconst promise3 = new Promise((resolve, reject) => {\n  let leftClicked = false;\n  let rightClicked = false;\n\n  document.addEventListener('click', () => {\n    leftClicked = true;\n\n    if (leftClicked && rightClicked) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    rightClicked = true;\n\n    if (leftClicked && rightClicked) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\npromise3.then(successHandler).catch(errorHandler);\n"],"names":["successHandler","text","message","document","createElement","setAttribute","className","textContent","body","append","errorHandler","promise1","Promise","resolve","reject","addEventListener","setTimeout","Error","then","catch","error","promise2","e","preventDefault","promise3","leftClicked","rightClicked"],"version":3,"file":"index.5138efe1.js.map"}